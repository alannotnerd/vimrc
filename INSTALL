#!/usr/bin/env python3

from subprocess import run, check_output
from os import path, listdir, mkdir
from shutil import which, rmtree
from pathlib import Path
import platform


def path_of(file):
    return path.join(path.dirname(__file__), file)

import platform

def os_name():
    os_name = platform.system()

    if os_name == "Windows":
        return "Windows"
    elif os_name == "Darwin":
        return "macOS"
    elif os_name == "Linux":
        # For more specific details on Linux distributions
        if bin_exists("yay"): 
            return "arch"
        else:
            return "Linux"
    else:
        return os_name



def bin_exists(bin):
    out = which(bin)
    return out


def link(src, target, force=False, os=None):
    if os and os != os_name():
        pass

    if force:
        if Path(target).is_dir() and not Path(target).is_symlink():
            rmtree(target)
        else:
            Path(target).unlink()


    if not path.exists(target):
        print(f"Configure {src}")
        Path(path.dirname(target)).mkdir(parents=True, exist_ok=True)
        run(["ln", "-s", path_of(src), target])
    else:
        print(f"Skip {src}")

def yay(pkg, bin=None):
    os = os_name()
    if bin_exists(bin if bin else pkg):
        return
    if os == "arch":
        run(["yay", "-Sy", "--noconfirm", pkg])
    else:
        raise f"Please install {pkg} mannualy"

def install_lvim():
    if bin_exists("lvim"):
        return
    if os_name() != "Windows":
        yay("neovim", "nvim")
        yay("make")
        run("LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)", shell=True)
    else:
        raise "Please install lvim mannully"
    
def install_zsh():
    os = os_name()
    if bin_exists("zsh"):
        return
    if os == "arch":
        run(["yay", "-Sy", "--noconfirm", "zsh"])
    else:
        raise "Please install zsh mannualy"

install_zsh()
install_lvim()

# create nvim symlinks
link("nvim", path.expandvars("$HOME/.config/nvim"))
link("lvim", path.expandvars("$HOME/.config/lvim"), True)
link("zellij", path.expandvars("$HOME/.config/zellij"))

# create alacritty symlinks
link("alacritty/alacritty.yml",
     path.expandvars("$HOME/.config/alacritty/alacritty.yml"))
link("alacritty/themes", path.expandvars("$HOME/.config/alacritty/themes"))
link("alacritty/keybindings/macos.yml",
     path.expandvars("$HOME/.config/alacritty/keybindings.yml"),
     os="macos")

# create tools symbol link
tools_path = path_of("tools")
for tool in listdir(tools_path):
    link(f"tools/{tool}", path.expandvars(f"$HOME/.local/bin/{tool}"))

if not bin_exists("zsh"):
    print("Zsh not found. Installing zsh...")
    install_zsh()

link("zsh/init.zsh", path.expandvars("$HOME/.zshrc"))
link("zsh/starship.toml", path.expandvars("$HOME/.config/starship.toml"))
